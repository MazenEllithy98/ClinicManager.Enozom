// <auto-generated />
using ClinicManager.Enozom.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicManager.Enozom.Repository.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20240415165116_InitialMigration1")]
    partial class InitialMigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClinicManager.Enozom.Core.Entities.Availability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Availabilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfWeek = "Monday",
                            DoctorId = 1,
                            EndTime = "13:00",
                            StartTime = "9:00"
                        },
                        new
                        {
                            Id = 2,
                            DayOfWeek = "Monday",
                            DoctorId = 1,
                            EndTime = "18:00",
                            StartTime = "2:00"
                        },
                        new
                        {
                            Id = 3,
                            DayOfWeek = "Tuesday",
                            DoctorId = 1,
                            EndTime = "13:00",
                            StartTime = "9:00"
                        },
                        new
                        {
                            Id = 4,
                            DayOfWeek = "Tuesday",
                            DoctorId = 1,
                            EndTime = "18:00",
                            StartTime = "2:00"
                        },
                        new
                        {
                            Id = 5,
                            DayOfWeek = "Tuesday",
                            DoctorId = 1,
                            EndTime = "21:00",
                            StartTime = "20:00"
                        },
                        new
                        {
                            Id = 6,
                            DayOfWeek = "Wednesday",
                            DoctorId = 1,
                            EndTime = "13:00",
                            StartTime = "9:00"
                        },
                        new
                        {
                            Id = 7,
                            DayOfWeek = "Wednesday",
                            DoctorId = 1,
                            EndTime = "18:00",
                            StartTime = "02:00"
                        },
                        new
                        {
                            Id = 8,
                            DayOfWeek = "Thursday",
                            DoctorId = 1,
                            EndTime = "18:00",
                            StartTime = "02:00"
                        },
                        new
                        {
                            Id = 9,
                            DayOfWeek = "Friday",
                            DoctorId = 1,
                            EndTime = "13:00",
                            StartTime = "9:00"
                        },
                        new
                        {
                            Id = 10,
                            DayOfWeek = "Monday",
                            DoctorId = 2,
                            EndTime = "17:00",
                            StartTime = "9:00"
                        },
                        new
                        {
                            Id = 11,
                            DayOfWeek = "Tuesday",
                            DoctorId = 2,
                            EndTime = "13:00",
                            StartTime = "9:00"
                        },
                        new
                        {
                            Id = 12,
                            DayOfWeek = "Tuesday",
                            DoctorId = 2,
                            EndTime = "21:00",
                            StartTime = "20:00"
                        },
                        new
                        {
                            Id = 13,
                            DayOfWeek = "Thursday",
                            DoctorId = 2,
                            EndTime = "18:00",
                            StartTime = "02:00"
                        },
                        new
                        {
                            Id = 14,
                            DayOfWeek = "Friday",
                            DoctorId = 2,
                            EndTime = "13:00",
                            StartTime = "09:00"
                        });
                });

            modelBuilder.Entity("ClinicManager.Enozom.Core.Entities.DaysOfWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("ClinicManager.Enozom.Core.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mohamed"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ahmed"
                        });
                });

            modelBuilder.Entity("ClinicManager.Enozom.Core.Entities.Availability", b =>
                {
                    b.HasOne("ClinicManager.Enozom.Core.Entities.Doctor", null)
                        .WithMany("Availabilities")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClinicManager.Enozom.Core.Entities.Doctor", b =>
                {
                    b.Navigation("Availabilities");
                });
#pragma warning restore 612, 618
        }
    }
}
